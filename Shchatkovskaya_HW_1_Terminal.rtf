***************************************
ЗАДАНИЕ 1
Linux terminal (GitBash) commands

***************************************

1) Посмотреть где я - pwd

2) Создать папку - mkdir Folder

3) Зайти в папку - cd Folder

4) Создать 3 папки - mkdir Folder_1 Folder_2 Folder_3

5) Зайти в любую папку - cd Folder_1

6) Создать 5 файлов (3 txt, 2 json) - touch file1.txt file2.txt file3.txt file4.json file5.json

7) Создать 3 папки - mkdir Folder_a Folder_b Folder_c

8. Вывести список содержимого папки - ls

9) + Открыть любой txt файл - cat > file1.txt

10) + написать туда что-нибудь, любой текст. - Ввод текста в поле ввода после запуска предыдущей команды

Тестирование программного обеспечения - это процесс анализа программного средства и сопутствующей документации с целью выявления дефектов и повышения качества продукта.
Ошибка (Error) возникает из-за просчета (Mistake) в написании кода разработчиком;
Дефект (Defect) это скрытый недостаток в ПО, возникший из-за ошибки в написании кода;
Когда дефект (Defect) обнаруживается тестировщиком, он называется багом (Bug);
Если тестировщики упустили дефект и его нашел пользователь, то это сбой (Failure);
Если программа в итоге не выполняет свою функцию, то это отказ (Fault).

11) + сохранить и выйти. - ^C

12) Выйти из папки на уровень выше -  cd ..

13) переместить любые 2 файла, которые вы создали, в любую другую папку. - mv ./Folder_1/{file1.txt,file2.txt} ./Folder_2

14) скопировать любые 2 файла, которые вы создали, в любую другую папку. - cp ./Folder_1/{file3.txt,file4.json} ./Folder_3

15) Найти файл по имени - find . -name "file?.*

16) просмотреть содержимое в реальном времени (команда grep) изучите как она работает - tail -F file1.txt | grep "Defect"

17) вывести несколько первых строк из текстового файла - head -5 file1.txt

18) вывести несколько последних строк из текстового файла - tail -3 file1.txt

19) просмотреть содержимое длинного файла (команда less) изучите как она работает.

20) вывести дату и время - date


***************************************************
ЗАДАНИЕ 2
Отправить http-запрос на сервер
***************************************************

curl "http://162.55.220.72:5005/get_method?name=(Elena)&age=(45)"          
Ответ сервера:   [«(Elena)","(45)"]


***************************************************
ЗАДАНИЕ 3
Написать скрипт который выполнит автоматически пункты 3, 4, 5, 6, 7, 8, 13

***************************************************
Файл скрипта my_script.sh
Запуск командой ./my_script.sh

#!/bin/bash
# This is my first script!
cd ~/LearningQA/Terminal/folder
mkdir Folder_1 Folder_2 Folder_3
cd Folder_1
touch file1.txt file2.txt file3.txt file4.json file5.json
mkdir Folder_a Folder_b Folder_c
ls -la
mv ./Folder_1/{file1.txt,file2.txt} ./Folder_2

